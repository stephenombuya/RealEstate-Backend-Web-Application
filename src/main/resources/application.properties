# =========================
# Application Name
# =========================
spring.application.name=RealEstateApplication

# =========================
# Database Configuration
# =========================
spring.datasource.url=jdbc:mysql://localhost:3306/real_estate_db
spring.datasource.username=your_username
# Consider using environment variables for sensitive information
spring.datasource.password=your_password
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# Connection pool settings
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=30000

# =========================
# Hibernate / JPA Settings
# =========================
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.jdbc.time_zone=UTC

# =========================
# Server Configuration
# =========================
server.port=8081
server.compression.enabled=true
server.http2.enabled=true
server.tomcat.max-threads=200
server.tomcat.max-connections=10000
server.tomcat.accept-count=100

# =========================
# Logging
# =========================
logging.level.com.realestate.app=DEBUG
logging.level.org.springframework.security=INFO
logging.level.org.springframework.web=INFO
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# =========================
# Spring Security Configuration
# =========================
# IMPORTANT: Remove default user in production
spring.security.user.name=${ADMIN_USER:admin}
spring.security.user.password=${ADMIN_PASSWORD:password}
spring.security.user.roles=ADMIN

# =========================
# Resilience4j Rate Limiter Configuration (Standardized)
# =========================
# Default rate limiter configuration
resilience4j.ratelimiter.instances.default.limit-for-period=50
resilience4j.ratelimiter.instances.default.limit-refresh-period=1s
resilience4j.ratelimiter.instances.default.timeout-duration=0
resilience4j.ratelimiter.instances.default.register-health-indicator=true
resilience4j.ratelimiter.instances.default.event-consumer-buffer-size=100

# Standard API endpoints - moderate limits
resilience4j.ratelimiter.instances.standardApi.limit-for-period=30
resilience4j.ratelimiter.instances.standardApi.limit-refresh-period=1s
resilience4j.ratelimiter.instances.standardApi.timeout-duration=0
resilience4j.ratelimiter.instances.standardApi.register-health-indicator=true

# Write operations - lower limits
resilience4j.ratelimiter.instances.writeOperations.limit-for-period=10
resilience4j.ratelimiter.instances.writeOperations.limit-refresh-period=1s
resilience4j.ratelimiter.instances.writeOperations.timeout-duration=0
resilience4j.ratelimiter.instances.writeOperations.register-health-indicator=true

# Critical operations - strict limits
resilience4j.ratelimiter.instances.criticalOperations.limit-for-period=5
resilience4j.ratelimiter.instances.criticalOperations.limit-refresh-period=1s
resilience4j.ratelimiter.instances.criticalOperations.timeout-duration=0
resilience4j.ratelimiter.instances.criticalOperations.register-health-indicator=true

# Search/read operations - higher limits
resilience4j.ratelimiter.instances.searchOperations.limit-for-period=50
resilience4j.ratelimiter.instances.searchOperations.limit-refresh-period=1s
resilience4j.ratelimiter.instances.searchOperations.timeout-duration=0
resilience4j.ratelimiter.instances.searchOperations.register-health-indicator=true

# Authentication endpoints - special handling for security
resilience4j.ratelimiter.instances.loginRateLimiter.limit-for-period=5
resilience4j.ratelimiter.instances.loginRateLimiter.limit-refresh-period=1m
resilience4j.ratelimiter.instances.loginRateLimiter.timeout-duration=0
resilience4j.ratelimiter.instances.loginRateLimiter.register-health-indicator=true

resilience4j.ratelimiter.instances.registerRateLimiter.limit-for-period=3
resilience4j.ratelimiter.instances.registerRateLimiter.limit-refresh-period=1m
resilience4j.ratelimiter.instances.registerRateLimiter.timeout-duration=0
resilience4j.ratelimiter.instances.registerRateLimiter.register-health-indicator=true

# =========================
# Resilience4j Circuit Breaker Configuration
# =========================
resilience4j.circuitbreaker.instances.default.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.default.minimum-number-of-calls=10
resilience4j.circuitbreaker.instances.default.sliding-window-size=20
resilience4j.circuitbreaker.instances.default.sliding-window-type=COUNT_BASED
resilience4j.circuitbreaker.instances.default.wait-duration-in-open-state=60s
resilience4j.circuitbreaker.instances.default.permitted-number-of-calls-in-half-open-state=5
resilience4j.circuitbreaker.instances.default.register-health-indicator=true

# =========================
# Resilience4j Time Limiter Configuration
# =========================
resilience4j.timelimiter.instances.default.timeout-duration=5s
resilience4j.timelimiter.instances.default.cancel-running-future=true

# =========================
# Actuator & Monitoring Configuration
# =========================
management.endpoints.web.exposure.include=health,info,metrics,prometheus,ratelimiters
management.endpoint.health.show-details=when_authorized
management.health.circuitbreakers.enabled=true
management.health.ratelimiters.enabled=true
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.metrics.tags.application=${spring.application.name}

# =========================
# Spring Cloud Gateway Routing
# =========================
spring.cloud.gateway.default-filters[0]=AddRequestHeader=X-Request-Foo, Bar
spring.cloud.gateway.default-filters[1]=AddResponseHeader=X-Response-Time, $\{responseTime}

spring.cloud.gateway.routes[0].id=auth
spring.cloud.gateway.routes[0].uri=http://localhost:8080
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/auth/**
spring.cloud.gateway.routes[0].filters[0]=RequestRateLimiter=5, 60, loginRateLimiter

spring.cloud.gateway.routes[1].id=listings
spring.cloud.gateway.routes[1].uri=http://localhost:8080
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/listings/**
spring.cloud.gateway.routes[1].filters[0]=RequestRateLimiter=30, 1, standardApi

spring.cloud.gateway.routes[2].id=agents
spring.cloud.gateway.routes[2].uri=http://localhost:8080
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/agents/**
spring.cloud.gateway.routes[2].filters[0]=RequestRateLimiter=30, 1, standardApi

spring.cloud.gateway.routes[3].id=properties
spring.cloud.gateway.routes[3].uri=http://localhost:8080
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/properties/**
spring.cloud.gateway.routes[3].filters[0]=RequestRateLimiter=30, 1, standardApi

# =========================
# Redis Configuration (for distributed rate limiting)
# =========================
spring.redis.host=localhost
spring.redis.port=6379
spring.redis.timeout=2000
# Uncomment and set if using password authentication
#spring.redis.password=${REDIS_PASSWORD:}

# =========================
# Bucket4j Configuration
# =========================
bucket4j.enabled=true
bucket4j.filters[0].cache-name=buckets
bucket4j.filters[0].filter-method=servlet
bucket4j.filters[0].filter-order=1
bucket4j.filters[0].url=/api/*
bucket4j.filters[0].rate-limits[0].expression=getRemoteAddr()
bucket4j.filters[0].rate-limits[0].bandwidths[0].capacity=100
bucket4j.filters[0].rate-limits[0].bandwidths[0].time=1
bucket4j.filters[0].rate-limits[0].bandwidths[0].unit=minutes

# =========================
# CORS Configuration
# =========================
spring.mvc.cors.allowed-origins=http://localhost:3000,https://yourdomain.com
spring.mvc.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.mvc.cors.allowed-headers=*
spring.mvc.cors.allow-credentials=true
spring.mvc.cors.max-age=3600

# =========================
# Email Integration (Optional / Commented)
# =========================
#spring.mail.host=smtp.gmail.com
#spring.mail.port=587
#spring.mail.username=${EMAIL_USERNAME:your-email@gmail.com}
#spring.mail.password=${EMAIL_PASSWORD:your-email-password}
#spring.mail.protocol=smtp
#spring.mail.properties.mail.smtp.starttls.enable=true
#spring.mail.properties.mail.smtp.auth=true
#spring.mail.test-connection=false

# =========================
# Swagger/OpenAPI Documentation
# =========================
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.packages-to-scan=com.realestate.app.controllers
